apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "helm.fullname" . }}
  namespace: {{ include "helm.namespace" . }}
  labels:
    {{- include "helm.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  strategy:
    type: {{ .Values.deployStrategy | default "Recreate" }}      
  selector:
    matchLabels:
      {{- include "helm.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: {{ include "helm.fullname" . }}
        {{- if and .Values.azure .Values.azure.workloadIdentity }}
        azure.workload.identity/use: {{ .Values.azure.workloadIdentity | default false }}
        {{- end }}
        {{- if .Values.image.force }}
        date: "{{ now | unixEpoch }}"
        {{- end}}    
        {{- include "helm.selectorLabels" . | nindent 8 }}
    spec:
      {{- if .Values.image.hostname }}
      hostname: {{ .Values.image.hostname }}
      {{- end}}    
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "helm.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.initContainer }}
      initContainers:
        - name: {{ .Chart.Name }}-init-container
          {{- if hasKey .Values.initContainer "tag" }}
          image: {{ .Values.initContainer.image }}:{{ .Values.initContainer.tag }}
          {{ else }}
          image: {{ .Values.initContainer.image }}:{{ .Values.image.tag }}
          {{ end }}
          imagePullPolicy: {{ .Values.initContainer.pullPolicy }}
          command: {{ .Values.initContainer.command }}
          env:
            {{- if .Values.initContainer.env }}
              {{- toYaml .Values.initContainer.env | nindent 14 }}
            {{- end }}
      {{- end }}
      containers:
        {{- if .Values.sidecarimage }}
        - name: "{{ .Values.sidecarimage.name }}"
          image: "{{ .Values.sidecarimage.repository }}:{{ .Values.sidecarimage.tag }}"
          imagePullPolicy: {{ .Values.sidecarimage.pullPolicy }}
        {{- end }}          
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            {{- if .Values.image.env }}
              {{- toYaml .Values.image.env | nindent 14 }}
            {{- end }}
            {{- if and .Values.azure (hasKey .Values.azure "keyVaultName") .Values.azure.keyVaultName }}
            {{- with .Values }}
            {{- range .kvSecrets }}
            - name: {{ . | upper | replace "-" "_" }}
              valueFrom:
                secretKeyRef:
                  # name: {{ $.Values.chartName }}-secrets # Use the top-level .Values for chart name
                  name: {{ include "helm.fullname" . }}-secrets
                  key: {{ . | lower | replace "_" "-" }}
            {{- end }}
            {{- end }}
            {{- end }}
          {{- if .Values.image.envFrom }}
          envFrom:
            {{- range .Values.image.envFrom.secretRefs }}
              - secretRef:
                  name: {{ . }}
            {{- end }}
            {{- range .Values.image.envFrom.configMapRefs }}
              - configMapRef:
                  name: {{ . }}
            {{- end }}
          {{- end }}
          args: [ {{.Values.image.args}} ]          
          ports:
            - name: http
              containerPort: {{ .Values.image.containerPort }}
              protocol: TCP
          {{- if and (hasKey .Values.image "liveness") .Values.image.liveness }}
          livenessProbe:
            httpGet:
              path: {{ .Values.image.liveness }}
              port: http
          {{- end }}
          {{- if and (hasKey .Values.image "readiness") .Values.image.readiness }}
          readinessProbe:
            httpGet:
              path: {{ .Values.image.readiness }}
              port: http
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        {{- if and .Values.azure (hasKey .Values.azure "keyVaultName") .Values.azure.keyVaultName }}
        volumeMounts:
          - name: kv-store
            mountPath: "/mnt/secrets-store"
            readOnly: true
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if and .Values.azure (hasKey .Values.azure "keyVaultName") .Values.azure.keyVaultName }}
      volumes:
        - name: kv-store
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: {{ include "helm.fullname" . }}
      {{- end }}
