apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "helm.fullname" . }}
  namespace: {{ include "helm.namespace" . }}
  labels:
    {{- include "helm.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount | default 1}}
  {{- else }}
  replicas: {{ .Values.autoscaling.minReplicas | default 3}}
  {{- end }}
  strategy:
    type: {{ .Values.deployStrategy | default "Recreate" }}    
  selector:
    matchLabels:
      {{- include "helm.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: {{ include "helm.fullname" . }}
        azure.workload.identity/use: {{ .Values.azure.workloadIdentity | default false | quote }}
        {{- if .Values.image.force }}
        date: "{{ now | unixEpoch }}"
        {{- end}}    
        {{- include "helm.selectorLabels" . | nindent 8 }}
        {{- include "helm.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "helm.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        {{- if .Values.sidecarimage }}
        - name: "{{ .Values.sidecarimage.name }}"
          image: "{{ .Values.sidecarimage.repository }}:{{ .Values.sidecarimage.tag }}"
          imagePullPolicy: {{ .Values.sidecarimage.pullPolicy }}
        {{- end }}    
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{- if .Values.containerimage }}
            {{ .Values.containerimage }}
          {{- else }}
            "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            {{- if .Values.image.env }}
              {{- toYaml .Values.image.env | nindent 2 }}
            {{- end }}
            {{- if and .Values.azure (hasKey .Values.azure "keyVaultName") }}
            {{- with .Values }}
              {{- range .kvSecrets }}
              - name: {{ . | upper | replace "-" "_" }}
                valueFrom:
                  secretKeyRef:
                    name: {{ include "helm.fullname" $ }}-secrets # Use the "helm.fullname" helper function
                    key: {{ . | lower | replace "_" "-" }}
              {{- end }}
            {{- end }}
            {{- end }}            
          {{- if .Values.image.envFrom }}
          envFrom:
            {{- range .Values.image.envFrom.secretRefs }}
              - secretRef:
                  name: {{ . }}
            {{- end }}
            {{- range .Values.image.envFrom.configMapRefs }}
              - configMapRef:
                  name: {{ . }}
            {{- end }}
          {{- end }}
          args: [ {{.Values.image.args}} ]
          ports:
            - name: http
              containerPort: {{ .Values.image.containerPort }}
              protocol: TCP
          {{- if and (hasKey .Values.image "liveness") .Values.image.liveness }}
          livenessProbe:
            httpGet:
              path: {{ .Values.image.liveness }}
              port: http
          {{- end }}
          {{- if and (hasKey .Values.image "readiness") .Values.image.readiness }}
          readinessProbe:
            httpGet:
              path: {{ .Values.image.readiness }}
              port: http
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
            {{- if and .Values.azure (hasKey .Values.azure "keyVaultName") }}
            - name: kv-store
              mountPath: "/mnt/secrets-store"
              readOnly: true
            {{- end }}
            {{- if and .Values.azure.storage (hasKey .Values.azure.storage "share") }}
            - name: azurefile-volume  
              mountPath: "/mnt/azure/{{ .Values.azure.storage.share }}"
            {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        {{- with .Values.volumes }}
        {{- toYaml . | nindent 2 }}
        {{- end }}
        {{- if and .Values.azure (hasKey .Values.azure "keyVaultName") }}
        - name: kv-store
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: {{ include "helm.fullname" . }}-azure-kv
        {{- end }}
        {{- if and .Values.azure.storage (hasKey .Values.azure.storage "share") }}
        - name: azurefile-volume
          persistentVolumeClaim:
            claimName: {{ include "helm.fullname" . }}-azure-pvc
        {{- end }}
