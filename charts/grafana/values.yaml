image:
  repository: grafana/grafana-oss # see imagePullSecrets to define github secrets
  pullPolicy: Always
  containerPort: 3000
  tag: "latest"
#  force: true # will force pods to redeploy using timestamp label
#  liveness: /
#  readiness: /
#   envFrom:
#     secretRefs:
#       - secret-name
#     configMapRefs:
#       - secret-name
#   env:
#     - name: ENVVARIABLENAME
#       value: VALUE

initContainer: 
  image:
  tag:
  imagePullPolicy:
  command:
  env:
  - name: 
    value: 

azure: 
  workloadIdentity: false
  usePodIdentity: false
  useVMManagedIdentity: false
  # storage:
  #   share: public
  #   class: azurefile-csi
  #   capacity: 10Gi
  # keyVaultName: 
  # kvSecrets:
  # - "key-vault-entry"
  # clientId:
  # tenantId: 

grafana: 
  adminUser: administrator
  adminPassword: administrator
  dashboardsPath: dashboards
  datasourcesPath: datasources
  enabled: true

service:
  port: 80
  type: ClusterIP

imagePullSecrets: []
# Example:
# imagePullSecrets:
#   - name: dockerconfigjson-github-com

# If running a sidecar, this will automatically load it
# sidecarimage:
#   name: "logging-sidecar"
#   repository: mylogging-sidecar
#   pullPolicy: Always
#   tag: "latest"

# pdbAvailablePercent: 50%

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "" # ex app-service-identity

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

# the oss base image doesn't have DNS defined which causes startup errors unless defined
dnsConfig:
  nameservers:
    - 8.8.8.8
    - 8.8.4.4

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# if using traefik, use the image.domainPath to control the ingress and not this
traefik:
  enabled: false
  domainPath: ""  #ingress route definition
  stripPath: true

# if using cert-manager, ensure the appropriate path and domain
ingress:
  enabled: false
  className: "nginx"
  domain: chart-example.local
  path: /example-service
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-staging" # this will trigger cert-manager to request a certificate
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # hosts: []
  #   - host: chart-example.local
  #     paths:
  #       - path: /
  #         pathType: ImplementationSpecific
  # tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  limits:
    cpu: 500m
    memory: 256Mi
  requests:
    cpu: 100m
    memory: 128Mi


autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""
namespaceOverride: "" # force specific namespace