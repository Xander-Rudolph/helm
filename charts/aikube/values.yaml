#################
# Global config #
#################
global:
  configRoot: /mnt/e/kubestore
  configCapacity: 10Gi
  mediaRoot: /mnt/media # this has other references... make sure you check
  mediaCapacity: 15Ti
# global:
#   configRoot: /mnt/kubestore
#   configCapacity: 10Gi
#   mediaRoot: /mnt/media # this has other references... make sure you check
#   mediaCapacity: 15Ti


# # https://github.com/traefik/traefik-helm-chart/blob/master/traefik/values.yaml  
# traefik:
#   enableTraefikDashboard: true
#   creds:
#     user: administrator
#     password: Dashboard
#   image:
#     pullPolicy: Always
#   service:
#     type: LoadBalancer
#   providers:
#     kubernetesCRD:
#       allowCrossNamespace: true

####################
# Media app config #
####################
stable-diffusion-webui:
  image:
    repository: ghcr.io/xander-rudolph/stable-diffusion
    tag: latest
    pullPolicy: Always
    hostname: stable-diffusion-webui
    additionalPorts:
      - name: web
        containerPort: 7860
        protocol: TCP
    env:
      - name: NVIDIA_VISIBLE_DEVICES
        value: ${NVIDIA_VISIBLE_DEVICES}
      - name: NVIDIA_DRIVER_CAPABILITIES
        value: ${NVIDIA_DRIVER_CAPABILITIES}
      - name: COMMANDLINE_ARGS
        value: "--medvram --xformers --enable-insecure-extension-access"
  volumes:
    - name: config-vol
      persistentVolumeClaim:
        claimName: config-pvc
  volumeMounts:
    - name: config-vol
      mountPath: /outputs
      subPath: sd_outputs
    - name: config-vol
      mountPath: /models
      subPath: sd_models
    - name: config-vol
      mountPath: /configs
      subPath: sd_configs
  resources:
    reservations:
      devices:
        - driver: nvidia
          count: all
          capabilities:
            - gpu

# AMD docker run --rm --name ollama --device /dev/kfd --device /dev/dri -d -v ollama:/root/.ollama -p 11434:11434 ollama/ollama:rocm
# ref: https://tech-undocs.info/ollama/run-with-docker
ollama:
  image:
    repository: ollama/ollama
    tag: rocm
    pullPolicy: Always
  hostname: ollama
  additionalPorts:
    - name: api
      containerPort: 11434
      protocol: TCP
  volumes:
    - name: config-vol
      persistentVolumeClaim:
        claimName: config-pvc
  volumeMounts:
    - name: config-vol
      mountPath: /root/.ollama
      subPath: ollama
  securityContext:
    privileged: true
    capabilities:
      add:
        - SYS_ADMIN
  devices:
    - path: /dev/kfd
    - path: /dev/dri
  service:
    type: ClusterIP
    ports:
      - name: api
        port: 11434
        targetPort: 11434
        protocol: TCP

#NVIDIA            
# ollama:
#   image:
#     repository: ollama/ollama
#     tag: latest
#     pullPolicy: Always
#     env:
#       - name: NVIDIA_VISIBLE_DEVICES
#         value: ${NVIDIA_VISIBLE_DEVICES}
#       - name: NVIDIA_DRIVER_CAPABILITIES
#         value: ${NVIDIA_DRIVER_CAPABILITIES}
#     hostname: ollama
#     additionalPorts:
#       - name: api
#         containerPort: 11434
#         protocol: TCP
#   volumes:
#     - name: config-vol
#       persistentVolumeClaim:
#         claimName: config-pvc
#   volumeMounts:
#     - name: config-vol
#       mountPath: /root/.ollama
#       subPath: ollama
#   resources:
#     reservations:
#       devices:
#         - driver: nvidia
#           count: all
#           capabilities:
#             - gpu

open-webui:
  image:
    repository: ghcr.io/open-webui/open-webui
    tag: main
    pullPolicy: Always
    env:
      - name: AUTOMATIC1111_BASE_URL
        value: "http://stable-diffusion-webui:${SD_WEBUI_PORT}/"   
      - name: ENABLE_IMAGE_GENERATION
        value: "True"
      - name: OLLAMA_BASE_URL
        value: "http://ollama:${OLLAMA_PORT}"
      - name: ENABLE_RAG_WEB_SEARCH
        value: ${ENABLE_RAG_WEB_SEARCH}
      - name: RAG_WEB_SEARCH_ENGINE
        value: ${RAG_WEB_SEARCH_ENGINE}
      - name: RAG_WEB_SEARCH_RESULT_COUNT
        value: ${RAG_WEB_SEARCH_RESULT_COUNT}
      - name: RAG_WEB_SEARCH_CONCURRENT_REQUESTS
        value: ${RAG_WEB_SEARCH_CONCURRENT_REQUESTS}
      - name: SEARXNG_QUERY_URL
        value: ${SEARXNG_QUERY_URL}
    hostname: open-webui
    additionalPorts:
      - name: web
        containerPort: 8080
        protocol: TCP
  volumes:
    - name: config-vol
      persistentVolumeClaim:
        claimName: config-pvc
  volumeMounts:
    - name: config-vol
      mountPath: /config
      subPath: open-webui

searxng:
  image:
    repository: searxng/searxng
    tag: latest
    pullPolicy: Always
  hostname: searxng
  # containerPort: 80 # this is if you want to expose it with a service
  additionalPorts:
    - name: web
      containerPort: 8888
      protocol: TCP
  volumes:
    - name: config-vol
      persistentVolumeClaim:
        claimName: config-pvc
  volumeMounts:
    - name: config-vol
      mountPath: /config
      subPath: searxng
  podSecurityContext:
    capabilities:
      drop:
        - ALL
      add:
        - CHOWN
        - SETGID
        - SETUID
        - DAC_OVERRIDE

